# LibreChat Deployment Configuration
# Copy this file to .env and adjust the values as needed

#==================================================
# GENERAL SETTINGS
#==================================================
# Application port (default: 3080)
PORT=3080

# Domain settings (for production)
DOMAIN_CLIENT=http://localhost:3080
DOMAIN_SERVER=http://localhost:3080

# User and group IDs for Docker
UID=1000
GID=1000

#==================================================
# SECURITY SETTINGS
#==================================================
# JWT Secret (generate a strong random string)
JWT_SECRET=your-super-secret-jwt-key-here-change-this

# JWT Expiration (default: 1d)
JWT_EXPIRES_IN=7d

# Session secret
SESSION_EXPIRY=1000 * 60 * 15

#==================================================
# PKM AI BRIDGE SETTINGS
#==================================================
# PKM User ID for embedding operations
PKM_USER_ID=your-user-id-here

# Path to your notes (adjust to your notes location)
NOTES_PATH=../notes

# PKM AI Bridge path (for Docker volume mounting)
PKM_AI_BRIDGE_PATH=./pkm-ai-bridge

#==================================================
# RAG (Retrieval-Augmented Generation) SETTINGS
#==================================================
# RAG API port (default: 8000)
RAG_PORT=8000

# RAG API URL (internal Docker network)
RAG_API_URL=http://rag_api:8000

#==================================================
# DATABASE SETTINGS
#==================================================
# MongoDB connection string (Docker internal)
MONGO_URI=mongodb://mongodb:27017/LibreChat

# MongoDB database name
MONGO_DB_NAME=LibreChat

#==================================================
# MEILISEARCH SETTINGS
#==================================================
# Meilisearch master key (generate a random string)
MEILI_MASTER_KEY=your-meilisearch-master-key-here

# Meilisearch host (Docker internal)
MEILI_HOST=http://meilisearch:7700

# Disable analytics
MEILI_NO_ANALYTICS=true

#==================================================
# VECTOR DATABASE SETTINGS
#==================================================
# PostgreSQL with pgvector settings
POSTGRES_DB=mydatabase
POSTGRES_USER=myuser
POSTGRES_PASSWORD=mypassword

#==================================================
# AI MODEL PROVIDERS
#==================================================
# OpenAI API Key
OPENAI_API_KEY=your-openai-api-key-here

# Anthropic API Key
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Google AI API Key
GOOGLE_KEY=your-google-ai-api-key-here

#==================================================
# OPTIONAL: ADDITIONAL PROVIDERS
#==================================================
# Azure OpenAI
# AZURE_API_KEY=your-azure-api-key
# AZURE_OPENAI_API_INSTANCE_NAME=your-instance-name
# AZURE_OPENAI_API_DEPLOYMENT_NAME=your-deployment-name
# AZURE_OPENAI_API_VERSION=2024-02-15-preview

# Groq API Key
# GROQ_API_KEY=your-groq-api-key

# Together AI
# TOGETHERAI_API_KEY=your-together-api-key

#==================================================
# DEVELOPMENT SETTINGS
#==================================================
# Enable debug mode
DEBUG_LOGGING=true

# Enable console logs
DEBUG_CONSOLE=false

# Log level (error, warn, info, debug)
LOG_LEVEL=info

#==================================================
# FEATURE FLAGS
#==================================================
# Enable registration
ALLOW_REGISTRATION=true

# Enable social logins
ALLOW_SOCIAL_LOGIN=false

# Enable password reset
ALLOW_PASSWORD_RESET=true

#==================================================
# RATE LIMITING
#==================================================
# Message rate limiting (requests per minute)
LIMIT_MESSAGE_IP=40
LIMIT_MESSAGE_USER=40

# File upload limits
FILE_UPLOAD_IP_MAX=20
FILE_UPLOAD_USER_MAX=50

#==================================================
# PROXY SETTINGS (if needed)
#==================================================
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=http://proxy.example.com:8080
# NO_PROXY=localhost,127.0.0.1